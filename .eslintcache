[{"/Users/xingfeng.yang/project/scpweb/src/index.js":"1","/Users/xingfeng.yang/project/scpweb/src/App.js":"2","/Users/xingfeng.yang/project/scpweb/src/reportWebVitals.js":"3","/Users/xingfeng.yang/project/scpweb/src/components/header/Header.js":"4","/Users/xingfeng.yang/project/scpweb/src/components/left-menu/LeftMenu.js":"5","/Users/xingfeng.yang/project/scpweb/src/pages/dashboard/DashBoard.js":"6","/Users/xingfeng.yang/project/scpweb/src/components/left-menu/MenuItem.js":"7","/Users/xingfeng.yang/project/scpweb/src/components/breadcrumb-menu/BreadCrumbMenu.js":"8","/Users/xingfeng.yang/project/scpweb/src/components/card/Card.js":"9","/Users/xingfeng.yang/project/scpweb/src/pages/charts/Charts.js":"10","/Users/xingfeng.yang/project/scpweb/src/components/button/PushButton.js":"11","/Users/xingfeng.yang/project/scpweb/src/components/modal/ModalWrapper.js":"12","/Users/xingfeng.yang/project/scpweb/src/reducers/ScpReducer.js":"13","/Users/xingfeng.yang/project/scpweb/src/actions/ProjectsAction.js":"14","/Users/xingfeng.yang/project/scpweb/src/api/ScpApi.js":"15","/Users/xingfeng.yang/project/scpweb/src/pages/app_create/AppCreate.js":"16","/Users/xingfeng.yang/project/scpweb/src/pages/projects/Projects.js":"17","/Users/xingfeng.yang/project/scpweb/src/pages/project_create/ProjectCreate.js":"18","/Users/xingfeng.yang/project/scpweb/src/pages/tools/Tools.js":"19","/Users/xingfeng.yang/project/scpweb/src/api/Fetch.js":"20","/Users/xingfeng.yang/project/scpweb/src/actions/ToolsAction.js":"21","/Users/xingfeng.yang/project/scpweb/src/pages/project/Project.js":"22","/Users/xingfeng.yang/project/scpweb/src/actions/BreadCrumbMenuAction.js":"23","/Users/xingfeng.yang/project/scpweb/src/pages/app/Application.js":"24","/Users/xingfeng.yang/project/scpweb/src/pages/tool/Tool.js":"25","/Users/xingfeng.yang/project/scpweb/src/pages/case_create/CaseCreate.js":"26","/Users/xingfeng.yang/project/scpweb/src/pages/cases/Cases.js":"27","/Users/xingfeng.yang/project/scpweb/src/actions/CasesAction.js":"28","/Users/xingfeng.yang/project/scpweb/src/pages/case_groups/CaseGroups.js":"29","/Users/xingfeng.yang/project/scpweb/src/pages/case_group_create/CaseGroupCreate.js":"30","/Users/xingfeng.yang/project/scpweb/src/actions/TasksAction.js":"31"},{"size":920,"mtime":1611842154170,"results":"32","hashOfConfig":"33"},{"size":8553,"mtime":1611988033003,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1611128642506,"results":"35","hashOfConfig":"33"},{"size":282,"mtime":1611132780632,"results":"36","hashOfConfig":"33"},{"size":3517,"mtime":1611842370687,"results":"37","hashOfConfig":"33"},{"size":5271,"mtime":1612003955314,"results":"38","hashOfConfig":"33"},{"size":2551,"mtime":1611912627365,"results":"39","hashOfConfig":"33"},{"size":816,"mtime":1611909547735,"results":"40","hashOfConfig":"33"},{"size":545,"mtime":1611932746420,"results":"41","hashOfConfig":"33"},{"size":29140,"mtime":1611811638786,"results":"42","hashOfConfig":"33"},{"size":414,"mtime":1611902242510,"results":"43","hashOfConfig":"33"},{"size":1629,"mtime":1611810882879,"results":"44","hashOfConfig":"33"},{"size":9166,"mtime":1612003011273,"results":"45","hashOfConfig":"33"},{"size":2373,"mtime":1611930259696,"results":"46","hashOfConfig":"33"},{"size":374,"mtime":1612002099694,"results":"47","hashOfConfig":"33"},{"size":5166,"mtime":1611926769117,"results":"48","hashOfConfig":"33"},{"size":7248,"mtime":1611927110486,"results":"49","hashOfConfig":"33"},{"size":4526,"mtime":1611926785368,"results":"50","hashOfConfig":"33"},{"size":6915,"mtime":1611934609542,"results":"51","hashOfConfig":"33"},{"size":2621,"mtime":1611924750804,"results":"52","hashOfConfig":"33"},{"size":618,"mtime":1612002951743,"results":"53","hashOfConfig":"33"},{"size":5710,"mtime":1611929891646,"results":"54","hashOfConfig":"33"},{"size":284,"mtime":1611908161495,"results":"55","hashOfConfig":"33"},{"size":3424,"mtime":1611934456055,"results":"56","hashOfConfig":"33"},{"size":3387,"mtime":1611934987879,"results":"57","hashOfConfig":"33"},{"size":8052,"mtime":1612003106498,"results":"58","hashOfConfig":"33"},{"size":7104,"mtime":1611984290856,"results":"59","hashOfConfig":"33"},{"size":2529,"mtime":1612003712612,"results":"60","hashOfConfig":"33"},{"size":7232,"mtime":1611984544657,"results":"61","hashOfConfig":"33"},{"size":4620,"mtime":1611988074297,"results":"62","hashOfConfig":"33"},{"size":1008,"mtime":1612003994903,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"vxxpil",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xingfeng.yang/project/scpweb/src/index.js",[],["139","140"],"/Users/xingfeng.yang/project/scpweb/src/App.js",["141"],"import './App.css';\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport LeftMenu from \"./components/left-menu/LeftMenu\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Route, Switch} from \"react-router-dom\";\nimport DashBoard from \"./pages/dashboard/DashBoard\";\nimport {faCircle, faCubes, faFileSignature, faShieldAlt, faTachometerAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {Component} from \"react\";\nimport BreadCrumbMenu from \"./components/breadcrumb-menu/BreadCrumbMenu\";\nimport Charts from \"./pages/charts/Charts\";\nimport AppCreate from \"./pages/app_create/AppCreate\";\nimport Projects from \"./pages/projects/Projects\";\nimport ProjectCreate from \"./pages/project_create/ProjectCreate\";\nimport Tools from \"./pages/tools/Tools\";\nimport Project from \"./pages/project/Project\";\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {setBreadCrumbMenu} from \"./actions/BreadCrumbMenuAction\";\nimport Application from \"./pages/app/Application\";\nimport Tool from \"./pages/tool/Tool\";\nimport CaseCreate from \"./pages/case_create/CaseCreate\";\nimport Cases from \"./pages/cases/Cases\";\nimport CaseGroups from \"./pages/case_groups/CaseGroups\";\nimport CaseGroupCreate from \"./pages/case_group_create/CaseGroupCreate\";\n\nconst menuData = [\n    {\n        title: '主页',\n        route: '',\n        icon: faTachometerAlt,\n        routable: false,\n        child: [\n            {\n                title: 'Dashboard',\n                route: '/',\n                icon: faCircle,\n                routable: true,\n            }\n        ]\n    },\n    {\n        title: '项目',\n        route: '',\n        icon: faCubes,\n        routable: false,\n        child: [\n            {\n                title: '项目列表',\n                route: '/projects',\n                icon: faCircle,\n                routable: true,\n            },\n            {\n                title: '创建项目',\n                route: '/project/create',\n                icon: faCircle,\n                routable: true,\n            }\n        ]\n    },\n    {\n        title: '安全工具',\n        route: '',\n        icon: faShieldAlt,\n        routable: false,\n        child: [\n            {\n                title: '总览',\n                route: '/tools',\n                icon: faCircle,\n                routable: true,\n            }\n        ]\n    },\n    {\n        title: '安全用例',\n        route: '',\n        icon: faFileSignature,\n        routable: false,\n        child: [\n            {\n                title: '创建用例组',\n                route: '/case-groups/create',\n                icon: faCircle,\n                routable: true,\n            },\n            {\n                title: '用例组',\n                route: '/case-groups',\n                icon: faCircle,\n                routable: true,\n            },\n            {\n                title: '用例',\n                route: '/cases',\n                icon: faCircle,\n                routable: true,\n            },\n        ]\n    },\n    // {\n    //     title: '图表',\n    //     route: '',\n    //     icon: faChartArea,\n    //     routable: false,\n    //     child: [\n    //         {\n    //             title: '各种图表',\n    //             route: '/charts',\n    //             icon: faCircle,\n    //             routable: true,\n    //         }\n    //     ]\n    // }\n];\n\nconst AnimatedSwitch = props => {\n    const {children} = props\n    return (\n        <Route\n            render={({location}) => (\n                <TransitionGroup>\n                    <CSSTransition\n                        key={location.key}\n                        classNames={props.type || 'fade'}\n                        timeout={props.duration || 300}>\n                        <Switch location={location}>{children}</Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n            )}\n        />\n    )\n};\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Container className=\"App\" style={{padding: 0}}>\n                <Container style={{margin: 0, padding: 0}}>\n                    <Row style={{margin: 0, padding: 0}}>\n                        <Col md={2} style={{margin: 0, padding: 0, paddingLeft: '2em', paddingTop: '1em', background: 'transparent'}}>\n                            <Container style={{padding: 0, margin: 0, borderBottom: 'solid 1px rgb(55,83,182)', height: '4em'}}>\n                                <p style={{\n                                    color: '#fff',\n                                    display: 'inline-block',\n                                    height: '4em',\n                                    lineHeight: '1.5em',\n                                    padding: 0,\n                                    margin: 0,\n                                    paddingLeft: '0.5em',\n                                    fontWeight: 'bolder',\n                                    fontSize: '2em',\n                                }}>Aιγίς</p><span style={{color: '#fff', fontSize: '0.7em'}}>&nbsp;v0.0.1</span>\n                            </Container>\n                            <LeftMenu menu={menuData}/>\n                        </Col>\n                        <Col md={10} style={{margin: 0, padding: 0, paddingRight: '2em', paddingTop: '1em', paddingBottom: '1em'}}>\n                            <Container style={{\n                                margin: 0,\n                                padding: '1.5em',\n                                height: '4em',\n                                borderBottom: 'solid 1px #dedede',\n                                background: 'rgb(242, 245, 248)',\n                                borderTopLeftRadius: '2em',\n                                borderTopRightRadius: '2em',\n                            }}>\n                                <BreadCrumbMenu data={this.props.breadCrumbMenus}/>\n                            </Container>\n                            <Container\n                                style={{\n                                    margin: 0,\n                                    padding: '1.5em',\n                                    background: 'rgb(242, 245, 248)',\n                                    borderBottomLeftRadius: '2em',\n                                    borderBottomRightRadius: '2em'\n                                }}>\n                                <AnimatedSwitch>\n                                    <Route exact path={'/'} component={DashBoard}/>\n                                    <Route exact path={'/projects'} component={Projects}/>\n                                    <Route exact path={'/project/create'} component={ProjectCreate}/>\n                                    <Route exact path={'/project/:id'} component={Project}/>\n                                    <Route exact path={'/project/:projectId/:appId'} component={Application}/>\n                                    <Route exact path={'/app/create/:projectId'} component={AppCreate}/>\n                                    <Route exact path={'/tools'} component={Tools}/>\n                                    <Route exact path={'/tool/:toolId'} component={Tool}/>\n                                    <Route exact path={'/tool/case/:toolId'} component={CaseCreate}/>\n                                    <Route exact path={'/cases'} component={Cases}/>\n                                    <Route exact path={'/case-groups'} component={CaseGroups}/>\n                                    <Route exact path={'/case-groups/create'} component={CaseGroupCreate}/>\n\n                                    <Route exact path={'/charts'} component={Charts}/>\n                                </AnimatedSwitch>\n                            </Container>\n                        </Col>\n                    </Row>\n                </Container>\n            </Container>\n        );\n    }\n\n    componentDidMount() {\n        this.props.setBreadCrumbMenu([\n            {\n                title: 'Home',\n                clickable: true,\n                route: '/'\n            },\n            {\n                title: 'Dashboard',\n                clickable: false,\n                route: ''\n            }\n        ]);\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    breadCrumbMenus: state.reduxResult.breadCrumbMenus.data,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    setBreadCrumbMenu,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/Users/xingfeng.yang/project/scpweb/src/reportWebVitals.js",[],"/Users/xingfeng.yang/project/scpweb/src/components/header/Header.js",[],["142","143"],"/Users/xingfeng.yang/project/scpweb/src/components/left-menu/LeftMenu.js",[],"/Users/xingfeng.yang/project/scpweb/src/pages/dashboard/DashBoard.js",["144"],"/Users/xingfeng.yang/project/scpweb/src/components/left-menu/MenuItem.js",[],"/Users/xingfeng.yang/project/scpweb/src/components/breadcrumb-menu/BreadCrumbMenu.js",["145"],"import {Component} from \"react\";\nimport {Breadcrumb} from \"react-bootstrap\";\n\nimport './BreadCrumbMenu.css'\nimport {Link} from \"react-router-dom\";\n\nclass BreadCrumbMenu extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <Breadcrumb className={'BC'}>\n            {\n                this.props.data.map((item, index) => {\n                    return <Breadcrumb.Item key={index}\n                                            active={!item.clickable}> {this.renderLink(item)} </Breadcrumb.Item>\n                })\n            }\n        </Breadcrumb>;\n    }\n\n    renderLink(item) {\n        if (item.clickable) {\n            return <Link to={item.route}>{item.title}</Link>\n        } else {\n            return item.title\n        }\n    }\n}\n\nexport default BreadCrumbMenu;\n","/Users/xingfeng.yang/project/scpweb/src/components/card/Card.js",["146"],"import React, {Component} from \"react\";\n\nimport './Card.css'\nimport {Col, Container} from \"react-bootstrap\";\nclass Card extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <Col md={this.props.w} className={'CardContainer'}>\n            {this.props.title ? <h5 style={{color: '#668', fontWeight: 'normal'}}>   {this.props.title}</h5> : null}\n            <Container className={'Card'}>\n                {this.props.children}\n            </Container>\n        </Col>\n    }\n}\n\nexport default Card;\n","/Users/xingfeng.yang/project/scpweb/src/pages/charts/Charts.js",[],"/Users/xingfeng.yang/project/scpweb/src/components/button/PushButton.js",["147"],"import React, {Component} from \"react\";\nimport './PushButton.css';\nimport {Button} from \"react-bootstrap\";\n\nclass PushButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <Button style={this.props.style} disabled={this.props.disabled} onClick={this.props.onClick} className={'PushButton'}>{this.props.children}</Button>\n    }\n}\n\nexport default PushButton;\n","/Users/xingfeng.yang/project/scpweb/src/components/modal/ModalWrapper.js",[],"/Users/xingfeng.yang/project/scpweb/src/reducers/ScpReducer.js",["148","149"],"import {AppActions, ProjectActions, ProjectsActions} from \"../actions/ProjectsAction\";\nimport {combineReducers} from 'redux';\nimport {ToolsActions} from \"../actions/ToolsAction\";\nimport {BreadCrumbMenuActions} from \"../actions/BreadCrumbMenuAction\";\nimport {CasesActions} from \"../actions/CasesAction\";\nimport {TasksActions} from \"../actions/TasksAction\";\n\nconst initialState = {\n    projects: {\n        status: false,\n        message: null,\n        data: []\n    },\n    apps: [],\n    tools: {\n        status: false,\n        message: null,\n        data: []\n    },\n    tool: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    project: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    app: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    createProjectResult: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    createAppResult: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    createCaseResult: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    deleteAppResult: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    deleteProjectResult: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    breadCrumbMenus: {\n        data: []\n    },\n    cases: {\n        status: false,\n        message: null,\n        data: []\n    },\n    cas: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    caseGroups: {\n        status: false,\n        message: null,\n        data: []\n    },\n    caseGroup: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    deleteCaseResult: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    deleteCaseGroupResult: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    createCaseGroupResult: {\n        status: false,\n        message: null,\n        data: {}\n    },\n    tasks: {\n        status: false,\n        message: null,\n        data: []\n    },\n    scanResults: {\n        status: false,\n        message: null,\n        data: []\n    },\n    taskStartResult: {\n        status: false,\n        message: null,\n        data: {}\n    },\n};\n\nexport function reduxResult(state = initialState, action) {\n    switch (action.type) {\n        case ProjectsActions.API_PROJECTS_SUCCESS:\n            let applications = [];\n            action.payload.data.map((pj, index) => {\n                pj.applications.map((ap, id) => {\n                    applications.push(ap);\n                });\n            });\n            return Object.assign({}, state, {\n                projects: action.payload,\n                apps: applications,\n            });\n        case ProjectsActions.API_PROJECTS_FAILED:\n            return Object.assign({}, state, {\n                projects: action.payload,\n                apps: [],\n            });\n        case ToolsActions.API_TOOLS_SUCCESS:\n            return Object.assign({}, state, {\n                tools: action.payload,\n            });\n        case ToolsActions.API_TOOLS_FAILED:\n            return Object.assign({}, state, {\n                tools: action.payload,\n            });\n        case ToolsActions.API_TOOL_SUCCESS:\n            return Object.assign({}, state, {\n                tool: action.payload,\n            });\n        case ToolsActions.API_TOOL_FAILED:\n            return Object.assign({}, state, {\n                tool: action.payload,\n            });\n        case ProjectActions.API_PROJECT_SUCCESS:\n            return Object.assign({}, state, {\n                project: action.payload,\n            });\n        case ProjectActions.API_PROJECT_FAILED:\n            return Object.assign({}, state, {\n                project: action.payload,\n            });\n\n        case AppActions.API_APP_SUCCESS:\n            return Object.assign({}, state, {\n                app: action.payload,\n            });\n        case AppActions.API_APP_FAILED:\n            return Object.assign({}, state, {\n                app: action.payload,\n            });\n\n        case ProjectsActions.API_PROJECT_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                createProjectResult: action.payload,\n            });\n        case ProjectsActions.API_PROJECT_CREATE_FAILED:\n            return Object.assign({}, state, {\n                createProjectResult: action.payload,\n            });\n\n        case AppActions.API_APP_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                createAppResult: action.payload,\n            });\n        case AppActions.API_APP_CREATE_FAILED:\n            return Object.assign({}, state, {\n                createAppResult: action.payload,\n            });\n\n        case CasesActions.API_CASE_CREATE_SUCCESS:\n            return Object.assign({}, state, {\n                createCaseResult: action.payload,\n            });\n        case CasesActions.API_CASE_CREATE_FAILED:\n            return Object.assign({}, state, {\n                createCaseResult: action.payload,\n            });\n\n        case AppActions.API_APP_DELETE_SUCCESS:\n            return Object.assign({}, state, {\n                deleteAppResult: action.payload,\n            });\n        case AppActions.API_APP_DELETE_FAILED:\n            return Object.assign({}, state, {\n                deleteAppResult: action.payload,\n            });\n\n        case AppActions.API_PROJECT_DELETE_SUCCESS:\n            return Object.assign({}, state, {\n                deleteProjectResult: action.payload,\n            });\n        case AppActions.API_PROJECT_DELETE_FAILED:\n            return Object.assign({}, state, {\n                deleteProjectResult: action.payload,\n            });\n        case BreadCrumbMenuActions.SET_BREAD_CRUMB_MEU:\n            return Object.assign({}, state, {\n                breadCrumbMenus: action.payload,\n            });\n\n\n        case CasesActions.API_CASE_DELETE_SUCCESS:\n            return Object.assign({}, state, {\n                deleteCaseResult: action.payload,\n            });\n        case CasesActions.API_CASE_DELETE_FAILED:\n            return Object.assign({}, state, {\n                deleteCaseResult: action.payload,\n            });\n        case CasesActions.API_CASE_SUCCESS:\n            return Object.assign({}, state, {\n                cas: action.payload,\n            });\n        case CasesActions.API_CASE_FAILED:\n            return Object.assign({}, state, {\n                cas: action.payload,\n            });\n        case CasesActions.API_CASES_SUCCESS:\n            return Object.assign({}, state, {\n                cases: action.payload,\n            });\n        case CasesActions.API_CASES_FAILED:\n            return Object.assign({}, state, {\n                cases: action.payload,\n            });\n        case CasesActions.API_CASE_GROUP_DELETE_SUCCESS:\n            return Object.assign({}, state, {\n                deleteCaseGroupResult: action.payload,\n            });\n        case CasesActions.API_CASE_GROUP_DELETE_FAILED:\n            return Object.assign({}, state, {\n                deleteCaseGroupResult: action.payload,\n            });\n        case CasesActions.API_CASE_GROUP_SUCCESS:\n            return Object.assign({}, state, {\n                caseGroup: action.payload,\n            });\n        case CasesActions.API_CASE_GROUP_FAILED:\n            return Object.assign({}, state, {\n                caseGroup: action.payload,\n            });\n        case CasesActions.API_CASE_GROUPS_SUCCESS:\n            return Object.assign({}, state, {\n                caseGroups: action.payload,\n            });\n        case CasesActions.API_CASE_GROUPS_FAILED:\n            return Object.assign({}, state, {\n                caseGroups: action.payload,\n            });\n\n        case CasesActions.API_CASE_CREATE_GROUPS_SUCCESS:\n            return Object.assign({}, state, {\n                createCaseGroupResult: action.payload,\n            });\n        case CasesActions.API_CASE_CREATE_GROUPS_FAILED:\n            return Object.assign({}, state, {\n                createCaseGroupResult: action.payload,\n            });\n\n        case TasksActions.API_TASKS_SUCCESS:\n            return Object.assign({}, state, {\n                tasks: action.payload,\n            });\n        case TasksActions.API_TASKS_FAILED:\n            return Object.assign({}, state, {\n                tasks: action.payload,\n            });\n        case TasksActions.API_TASKS_RESULT_SUCCESS:\n            return Object.assign({}, state, {\n                scanResults: action.payload,\n            });\n        case TasksActions.API_TASKS_RESULT_FAILED:\n            return Object.assign({}, state, {\n                scanResults: action.payload,\n            });\n        case TasksActions.API_TASKS_START_SUCCESS:\n            return Object.assign({}, state, {\n                taskStartResult: action.payload,\n            });\n        case TasksActions.API_TASKS_START_FAILED:\n            return Object.assign({}, state, {\n                taskStartResult: action.payload,\n            })\n        default:\n            return state;\n    }\n}\n\nconst ScpReducer = combineReducers({\n    reduxResult,\n});\n\nexport default ScpReducer;\n","/Users/xingfeng.yang/project/scpweb/src/actions/ProjectsAction.js",[],"/Users/xingfeng.yang/project/scpweb/src/api/ScpApi.js",[],"/Users/xingfeng.yang/project/scpweb/src/pages/app_create/AppCreate.js",[],"/Users/xingfeng.yang/project/scpweb/src/pages/projects/Projects.js",[],"/Users/xingfeng.yang/project/scpweb/src/pages/project_create/ProjectCreate.js",[],"/Users/xingfeng.yang/project/scpweb/src/pages/tools/Tools.js",["150"],"import React from \"react\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport './Tools.css';\nimport Card from \"../../components/card/Card\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronRight, faCube, faEllipsisH, faShieldVirus, faTags, faTh, faThList} from \"@fortawesome/free-solid-svg-icons\";\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {getTools} from \"../../actions/ToolsAction\";\nimport {setBreadCrumbMenu} from \"../../actions/BreadCrumbMenuAction\";\n\nclass Tools extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            layout: 'grid'\n        };\n    }\n\n    changeToList() {\n        this.setState({\n            layout: 'list'\n        });\n    }\n\n    changeToGrid() {\n        this.setState({\n            layout: 'grid'\n        });\n    }\n\n    render() {\n        return <Container className={'Tools'}>\n            <Row style={{padding: 0, margin: 0}}>\n                <Col md={12}>\n                    <FontAwesomeIcon style={{color: this.state.layout === 'list' ? 'rgb(36, 66, 164)' : '#99a', fontSize: '1.5em'}}\n                                     onClick={this.changeToList.bind(this)} icon={faThList}/>\n                    <FontAwesomeIcon\n                        style={{color: this.state.layout === 'grid' ? 'rgb(36, 66, 164)' : '#99a', marginLeft: '0.5em', fontSize: '1.5em'}}\n                        onClick={this.changeToGrid.bind(this)} icon={faTh}/>\n                </Col>\n            </Row>\n            {\n                this.state.layout === 'list' ?\n                    <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                        {this.props.tools.map((tool, index) => {\n                            return this.renderToolRow(tool, index);\n                        })}\n                    </Row>\n                    :\n                    <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                        {this.props.tools.map((tool, index) => {\n                            return this.renderToolCard(tool, index);\n                        })}\n                    </Row>\n            }\n        </Container>\n    }\n\n    renderToolRow(tool, index) {\n        return <Card w={12} key={index}>\n            <Container>\n                <Row style={{marginTop: '0.5em'}}>\n                    <Col md={1}>\n                        <FontAwesomeIcon style={{color: 'rgb(36, 66, 164)', fontSize: '3em'}} icon={faShieldVirus}/>\n                    </Col>\n                    <Col md={11}>\n                        <Row>\n                            <Col md={6}>\n                                <h3 style={{\n                                    whiteSpace: 'nowrap',\n                                    display: 'inline-block',\n                                    textOverflow: 'ellipsis',\n                                    overflow: 'hidden'\n                                }}>{tool.name}</h3>&nbsp;\n                                <span\n                                    style={{\n                                        position: 'relative',\n                                        background: '#666',\n                                        borderRadius: '3px',\n                                        padding: '0.3em',\n                                        color: '#fff',\n                                        paddingTop: '0.1em',\n                                        paddingBottom: '0.1em',\n                                        top: '-1em',\n                                    }}>{tool.category}</span>\n                            </Col>\n                            <Col md={6} style={{textAlign: 'right'}}>\n                                <FontAwesomeIcon\n                                    icon={faEllipsisH}/>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={10}>\n                                <h6 style={{display: 'inline-block'}}>{tool.description}</h6>&nbsp;&nbsp;&nbsp;\n                                <span style={{color: '#668', margin: 0}}><FontAwesomeIcon style={{color: '#668'}} icon={faTags}/>&nbsp;{tool.metadata}</span>\n                            </Col>\n                            <Col md={2} style={{textAlign: 'right'}}>\n                                <Link to={'tool/'+tool.id}> <FontAwesomeIcon icon={faChevronRight}/></Link>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        </Card>;\n    }\n\n    renderToolCard(tool, index) {\n        return <Card w={3} key={index}>\n            <Container>\n                <Row>\n                    <Col md={10}>\n                        <h3 style={{\n                            whiteSpace: 'nowrap',\n                            textOverflow: 'ellipsis',\n                            overflow: 'hidden'\n                        }}><FontAwesomeIcon style={{color: 'rgb(36, 66, 164)'}} icon={faShieldVirus}/>&nbsp;{tool.name}</h3>\n                    </Col>\n                    <Col md={2} style={{textAlign: 'right'}}>\n                        <FontAwesomeIcon icon={faEllipsisH}/>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: '1em'}}>\n                    <Col md={12}>\n                        <h6>{tool.description}</h6>\n                        <p style={{color: '#668', margin: 0}}><FontAwesomeIcon style={{color: '#668'}} icon={faTags}/>&nbsp;{tool.metadata}</p>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: '1em'}}>\n                    <Col md={6}>\n                        <span\n                            style={{\n                                background: '#666',\n                                borderRadius: '3px',\n                                padding: '0.3em',\n                                color: '#fff',\n                                paddingTop: '0.1em',\n                                paddingBottom: '0.1em'\n                            }}>{tool.category}</span>\n                    </Col>\n                    <Col md={6} style={{textAlign: 'right'}}>\n                        <Link to={'tool/'+tool.id}> <FontAwesomeIcon icon={faChevronRight}/></Link>\n                    </Col>\n                </Row>\n            </Container>\n        </Card>;\n    }\n\n    componentDidMount() {\n        this.props.setBreadCrumbMenu([\n            {\n                title: 'Tools',\n                clickable: false,\n                route: ''\n            }\n        ]);\n        this.props.getTools();\n    }\n}\n\nconst mapStateToProps = state => ({\n    tools: state.reduxResult.tools.data,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getTools,\n    setBreadCrumbMenu\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tools);\n","/Users/xingfeng.yang/project/scpweb/src/api/Fetch.js",[],"/Users/xingfeng.yang/project/scpweb/src/actions/ToolsAction.js",[],"/Users/xingfeng.yang/project/scpweb/src/pages/project/Project.js",["151"],"import React from \"react\";\nimport {Col, Container, Dropdown, Row} from \"react-bootstrap\";\nimport './Project.css';\nimport Card from \"../../components/card/Card\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronRight, faCube, faEllipsisH, faPlay, faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {bindActionCreators} from \"redux\";\nimport {deleteApp, getProject} from \"../../actions/ProjectsAction\";\nimport {connect} from \"react-redux\";\nimport PushButton from \"../../components/button/PushButton\";\nimport {setBreadCrumbMenu} from \"../../actions/BreadCrumbMenuAction\";\nimport {Link} from \"react-router-dom\";\n\nclass Project extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <Container className={'Projects'}>\n            <Row style={{padding: 0, margin: 0}}>\n                <Col md={12}>\n                    <PushButton> <FontAwesomeIcon icon={faPlay}/> &nbsp;创建扫描任务</PushButton>\n                    <PushButton style={{marginLeft: '1em'}} onClick={this.gotoCreateApp.bind(this)}> <FontAwesomeIcon\n                        icon={faPlus}/> &nbsp;创建应用</PushButton>\n                </Col>\n            </Row>\n            <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                {this.renderProjectCard()}\n            </Row>\n            <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                <Card title={'应用'} w={6}>\n                    <Container>\n                        <Row>\n                            {\n                                (this.props.project.applications && this.props.project.applications.length !== 0) ? this.props.project.applications.map((app, index) => {\n                                    return this.renderAppRow(app, index);\n                                }) : <span style={{color: '#668'}}>无</span>\n                            }\n                        </Row>\n                    </Container>\n                </Card>\n                <Card title={'扫描记录'} w={6}>\n                    <Container>\n                        <Row>\n                            <span style={{color: '#668'}}>无</span>\n                        </Row>\n                    </Container>\n                </Card>\n            </Row>\n        </Container>\n    }\n\n    renderAppRow(app, index) {\n        return <Container className={'AppItem'} key={index}>\n            <Row style={{marginTop: '0.5em'}}>\n                <Col md={1}>\n                    <FontAwesomeIcon style={{color: 'rgb(36, 66, 164)', fontSize: '2em', marginTop: '0.5em'}} icon={faCube}/>\n                </Col>\n                <Col md={11}>\n                    <Row>\n                        <Col md={6}>\n                            <h3>{app.name}</h3>\n                        </Col>\n                        <Col md={6} style={{textAlign: 'right'}}>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"none\" id=\"dropdown-basic\">\n                                    <FontAwesomeIcon\n                                        icon={faEllipsisH}/>\n                                </Dropdown.Toggle>\n\n                                <Dropdown.Menu>\n                                    <Dropdown.Item onClick={this.deleteApp.bind(this, app.id)}>删除</Dropdown.Item>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={10}>\n                            <h6>{app.description}</h6>\n                        </Col>\n                        <Col md={2} style={{textAlign: 'right'}}>\n                            <Link to={'/project/' + this.props.project.id + '/' + app.id}><FontAwesomeIcon icon={faChevronRight}/></Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>;\n    }\n\n    renderProjectCard() {\n        return <Card title={'项目信息'} w={3}>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <h3><FontAwesomeIcon style={{color: 'rgb(36, 66, 164)'}} icon={faCube}/>&nbsp;{this.props.project.name}</h3>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: '1em'}}>\n                    <Col md={12}>\n                        <h6>{this.props.project.description}</h6>\n                    </Col>\n                </Row>\n            </Container>\n        </Card>;\n    }\n\n    componentDidMount() {\n        this.props.getProject(this.props.match.params.id);\n        this.props.setBreadCrumbMenu([\n            {\n                title: 'Projects',\n                clickable: true,\n                route: '/projects'\n            },\n            {\n                title: 'Project-' + this.props.match.params.id,\n                clickable: false,\n                route: ''\n            }\n        ]);\n    }\n\n    gotoCreateApp() {\n        this.props.history.push('/app/create/' + this.props.match.params.id);\n    }\n\n    deleteApp(appId) {\n        this.props.deleteApp(this.props.match.params.id, appId);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.deleteAppResult !== this.props.deleteAppResult) {\n            this.props.getProject(this.props.match.params.id);\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    project: state.reduxResult.project.data,\n    deleteAppResult: state.reduxResult.deleteAppResult,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getProject,\n    deleteApp,\n    setBreadCrumbMenu\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Project);\n","/Users/xingfeng.yang/project/scpweb/src/actions/BreadCrumbMenuAction.js",[],"/Users/xingfeng.yang/project/scpweb/src/pages/app/Application.js",["152"],"import React from \"react\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport './Application.css';\nimport Card from \"../../components/card/Card\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCube, faPlay} from \"@fortawesome/free-solid-svg-icons\";\nimport {bindActionCreators} from \"redux\";\nimport {getApp, getProject} from \"../../actions/ProjectsAction\";\nimport {connect} from \"react-redux\";\nimport PushButton from \"../../components/button/PushButton\";\nimport {setBreadCrumbMenu} from \"../../actions/BreadCrumbMenuAction\";\n\nclass Application extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <Container className={'Application'}>\n            <Row style={{padding: 0, margin: 0}}>\n                <Col md={12}>\n                    <PushButton><FontAwesomeIcon icon={faPlay}/> &nbsp;创建扫描任务</PushButton>\n                </Col>\n            </Row>\n            <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                {this.renderAppCard()}\n            </Row>\n            <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                <Card title={'扫描记录'} w={6}>\n                    <Container>\n                        <Row>\n                            <span style={{color: '#668'}}>无</span>\n                        </Row>\n                    </Container>\n                </Card>\n                <Card title={'正在运行中的扫描任务'} w={6}>\n                    <Container>\n                        <Row>\n                            <span style={{color: '#668'}}>无</span>\n                        </Row>\n                    </Container>\n                </Card>\n            </Row>\n        </Container>\n    }\n\n    renderAppCard() {\n        return <Card title={'应用信息'} w={3}>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <h3><FontAwesomeIcon style={{color: 'rgb(36, 66, 164)'}} icon={faCube}/>&nbsp;{this.props.app.name}</h3>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: '1em'}}>\n                    <Col md={12}>\n                        <span style={{fontSize: '1.1em'}}>{this.props.app.description}</span>\n                    </Col>\n                </Row>\n            </Container>\n        </Card>;\n    }\n\n    componentDidMount() {\n        this.props.getProject(this.props.match.params.projectId);\n        this.props.getApp(this.props.match.params.projectId, this.props.match.params.appId);\n\n        this.props.setBreadCrumbMenu([\n            {\n                title: 'Projects',\n                clickable: true,\n                route: '/projects'\n            },\n            {\n                title: 'Project-' + this.props.match.params.projectId,\n                clickable: true,\n                route: '/project/' + this.props.match.params.projectId\n            },\n            {\n                title: 'Application-' + this.props.match.params.appId,\n                clickable: false,\n                route: ''\n            }\n        ]);\n    }\n}\n\nconst mapStateToProps = state => ({\n    project: state.reduxResult.project.data,\n    app: state.reduxResult.app.data,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getProject,\n    getApp,\n    setBreadCrumbMenu\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Application);\n","/Users/xingfeng.yang/project/scpweb/src/pages/tool/Tool.js",["153","154","155"],"import React from \"react\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport './Tool.css';\nimport Card from \"../../components/card/Card\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCube, faPlay, faPlus} from \"@fortawesome/free-solid-svg-icons\";\nimport {bindActionCreators} from \"redux\";\nimport {getApp, getProject} from \"../../actions/ProjectsAction\";\nimport {connect} from \"react-redux\";\nimport PushButton from \"../../components/button/PushButton\";\nimport {setBreadCrumbMenu} from \"../../actions/BreadCrumbMenuAction\";\nimport {getTool} from \"../../actions/ToolsAction\";\n\nclass Tool extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return <Container className={'Tool'}>\n            <Row style={{padding: 0, margin: 0}}>\n                <Col md={12}>\n                    <PushButton><FontAwesomeIcon icon={faPlay}/> &nbsp;创建扫描任务</PushButton>\n                    <PushButton style={{marginLeft: '1em'}} onClick={this.gotoCreateCase.bind(this)}> <FontAwesomeIcon\n                        icon={faPlus}/> &nbsp;添加用例</PushButton>\n                </Col>\n            </Row>\n            <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                {this.renderToolCard()}\n            </Row>\n            <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                <Card title={'用例列表'} w={6}>\n                    <Container>\n                        <Row>\n                            <span style={{color: '#668'}}>无</span>\n                        </Row>\n                    </Container>\n                </Card>\n                <Card title={'正在运行中的扫描任务'} w={6}>\n                    <Container>\n                        <Row>\n                            <span style={{color: '#668'}}>无</span>\n                        </Row>\n                    </Container>\n                </Card>\n            </Row>\n        </Container>\n    }\n\n    renderToolCard() {\n        return <Card title={'工具信息'} w={6}>\n            <Container>\n                <Row>\n                    <Col md={12}>\n                        <h3><FontAwesomeIcon style={{color: 'rgb(36, 66, 164)'}} icon={faCube}/>&nbsp;{this.props.tool.name}</h3>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: '1em'}}>\n                    <Col md={12}>\n                        <span style={{fontSize: '1.1em'}}>{this.props.tool.description}</span>\n                    </Col>\n                </Row>\n            </Container>\n        </Card>;\n    }\n\n    componentDidMount() {\n        this.props.getTool(this.props.match.params.toolId);\n\n        this.props.setBreadCrumbMenu([\n            {\n                title: 'Tools',\n                clickable: true,\n                route: '/tools'\n            },\n            {\n                title: 'Tool-' + this.props.match.params.toolId,\n                clickable: false,\n                route: ''\n            }\n        ]);\n    }\n\n    gotoCreateCase(){\n        this.props.history.push('/tool/case/' + this.props.match.params.toolId);\n    }\n}\n\nconst mapStateToProps = state => ({\n    tool: state.reduxResult.tool.data,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    setBreadCrumbMenu,\n    getTool\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tool);\n","/Users/xingfeng.yang/project/scpweb/src/pages/case_create/CaseCreate.js",[],"/Users/xingfeng.yang/project/scpweb/src/pages/cases/Cases.js",[],"/Users/xingfeng.yang/project/scpweb/src/actions/CasesAction.js",[],"/Users/xingfeng.yang/project/scpweb/src/pages/case_groups/CaseGroups.js",["156"],"import React from \"react\";\nimport {Col, Container, Dropdown, Row} from \"react-bootstrap\";\nimport './CaseGroups.css';\nimport Card from \"../../components/card/Card\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronRight, faCube, faCubes, faEllipsisH, faFileSignature, faTh, faThList} from \"@fortawesome/free-solid-svg-icons\";\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {setBreadCrumbMenu} from \"../../actions/BreadCrumbMenuAction\";\nimport {deleteCaseGroups, getCaseGroups} from \"../../actions/CasesAction\";\n\nclass CaseGroups extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            layout: 'grid'\n        };\n    }\n\n    changeToList() {\n        this.setState({\n            layout: 'list'\n        });\n    }\n\n    changeToGrid() {\n        this.setState({\n            layout: 'grid'\n        });\n    }\n\n    render() {\n        return <Container className={'CaseGroups'}>\n            <Row style={{padding: 0, margin: 0}}>\n                <Col md={12}>\n                    <FontAwesomeIcon style={{color: this.state.layout === 'list' ? 'rgb(36, 66, 164)' : '#99a', fontSize: '1.5em'}}\n                                     onClick={this.changeToList.bind(this)} icon={faThList}/>\n                    <FontAwesomeIcon\n                        style={{color: this.state.layout === 'grid' ? 'rgb(36, 66, 164)' : '#99a', marginLeft: '0.5em', fontSize: '1.5em'}}\n                        onClick={this.changeToGrid.bind(this)} icon={faTh}/>\n                </Col>\n            </Row>\n            {\n                this.state.layout === 'list' ?\n                    <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                        {this.props.caseGroups.map((cas, index) => {\n                            return this.renderCaseRow(cas, index);\n                        })}\n                    </Row>\n                    :\n                    <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                        {this.props.caseGroups.map((cas, index) => {\n                            return this.renderCaseCard(cas, index);\n                        })}\n                    </Row>\n            }\n        </Container>\n    }\n\n    renderCaseRow(cas, index) {\n        return <Card w={12} key={index}>\n            <Container>\n                <Row style={{marginTop: '0.5em'}}>\n                    <Col md={1}>\n                        <FontAwesomeIcon style={{color: 'rgb(36, 66, 164)', fontSize: '3em',marginTop:'0.1em'}} icon={faCube}/>\n                    </Col>\n                    <Col md={11}>\n                        <Row>\n                            <Col md={6}>\n                                <h3 style={{\n                                    whiteSpace: 'nowrap',\n                                    textOverflow: 'ellipsis',\n                                    overflow: 'hidden',\n                                    display: 'inline-block'\n                                }}>{cas.name}</h3>\n                            </Col>\n                            <Col md={6} style={{textAlign: 'right'}}>\n                                <Dropdown>\n                                    <Dropdown.Toggle variant=\"none\" id=\"dropdown-basic\">\n                                        <FontAwesomeIcon\n                                            icon={faEllipsisH}/>\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item onClick={this.deleteCaseGroups.bind(this, cas.id)}>删除</Dropdown.Item>\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={10}>\n                                <FontAwesomeIcon style={{color: '#668'}} icon={faFileSignature}/>&nbsp;\n                                <span>{cas.cases.length}</span>&nbsp;&nbsp;&nbsp;\n                                <span style={{fontSize:'1.1em'}}>{cas.description}</span>\n                            </Col>\n                            <Col md={2} style={{textAlign: 'right'}}>\n                                <Link to={'case/' + cas.id}> <FontAwesomeIcon icon={faChevronRight}/></Link>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        </Card>;\n    }\n\n\n    renderCaseCard(cas, index) {\n        return <Card w={3} key={index}>\n            <Container>\n                <Row>\n                    <Col md={8}>\n                        <h3 style={{\n                            whiteSpace: 'nowrap',\n                            textOverflow: 'ellipsis',\n                            overflow: 'hidden'\n                        }}><FontAwesomeIcon style={{color: 'rgb(36, 66, 164)'}} icon={faCube}/>&nbsp;{cas.name}</h3>\n                    </Col>\n                    <Col md={4} style={{textAlign: 'right'}}>\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"none\" id=\"dropdown-basic\">\n                                <FontAwesomeIcon\n                                    icon={faEllipsisH}/>\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={this.deleteCaseGroups.bind(this, cas.id)}>删除</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: '1em'}}>\n                    <Col md={12}>\n                        <h6>{cas.description}</h6>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: '1em'}}>\n                    <Col md={6}>\n                        <FontAwesomeIcon style={{color: '#668'}} icon={faFileSignature}/>&nbsp;<span>{cas.cases.length}</span>\n                    </Col>\n                    <Col md={6} style={{textAlign: 'right'}}>\n                        <Link to={'case/' + cas.id}> <FontAwesomeIcon icon={faChevronRight}/></Link>\n                    </Col>\n                </Row>\n            </Container>\n        </Card>;\n    }\n\n    componentDidMount() {\n        this.props.setBreadCrumbMenu([\n            {\n                title: 'CaseGroups',\n                clickable: false,\n                route: ''\n            }\n        ]);\n        this.props.getCaseGroups();\n    }\n\n    deleteCaseGroups(caseId) {\n        this.props.deleteCaseGroups(caseId);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.deleteCaseGroupsResult !== this.props.deleteCaseGroupsResult) {\n            this.props.getCaseGroups();\n        }\n    }\n}\n\nconst mapStateToProps = state => ({\n    caseGroups: state.reduxResult.caseGroups.data,\n    deleteCaseGroupsResult: state.reduxResult.deleteCaseGroupsResult,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    getCaseGroups,\n    deleteCaseGroups,\n    setBreadCrumbMenu\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CaseGroups);\n","/Users/xingfeng.yang/project/scpweb/src/pages/case_group_create/CaseGroupCreate.js",["157"],"import React from \"react\";\nimport {Container, FormControl, FormLabel, Row} from \"react-bootstrap\";\nimport './CaseGroupCreate.css';\nimport PushButton from \"../../components/button/PushButton\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck} from \"@fortawesome/free-solid-svg-icons\";\nimport Card from \"../../components/card/Card\";\nimport {bindActionCreators} from \"redux\";\nimport {createProject} from \"../../actions/ProjectsAction\";\nimport {connect} from \"react-redux\";\nimport ModalWrapper from \"../../components/modal/ModalWrapper\";\nimport {setBreadCrumbMenu} from \"../../actions/BreadCrumbMenuAction\";\nimport {createCaseGroup} from \"../../actions/CasesAction\";\n\nclass CaseGroupCreate extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.createCaseGroupRequest = {\n            name: '',\n            description: ''\n        };\n\n        this.state = {\n            btnCreate: {\n                disabled: false,\n                text: '创建用例组'\n            },\n            modalShow: false,\n        };\n    }\n\n    render() {\n        return <Container className={'ProjectCreate'}>\n            <Row style={{padding: 0, margin: 0, marginTop: '0em'}}>\n                <Card title={'创建用例组'} md={6}>\n                    <Row style={{padding: 0, margin: 0, marginTop: '0em'}}>\n                        <FormLabel style={{color: 'rgb(36, 66, 84)'}}>用例组名称</FormLabel>\n                        <FormControl onChange={this.changeName.bind(this)} placeHolder={'输入用例组名称'}/>\n                    </Row>\n                    <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                        <FormLabel style={{color: 'rgb(36, 66, 84)'}}>用例组描述</FormLabel>\n                        <FormControl onChange={this.changeDesc.bind(this)} as=\"textarea\" placeHolder={'输入描述'}/>\n                    </Row>\n                    <Row style={{padding: 0, margin: 0, marginTop: '1em'}}>\n                        <ModalWrapper show={this.state.modalShow} closeHook={this.modalClose.bind(this)}\n                                      title={'提示'}>{this.state.modalText}</ModalWrapper>\n                        <PushButton disabled={this.state.btnCreate.disabled} onClick={this.createCaseGroup.bind(this)}> <FontAwesomeIcon\n                            icon={faCheck}/> &nbsp;{this.state.btnCreate.text}\n                        </PushButton>\n                    </Row>\n                </Card>\n            </Row>\n        </Container>\n    }\n\n    modalClose() {\n        this.setState({\n            modalShow: false,\n        });\n    }\n\n    showModal(text) {\n        this.setState({\n            modalShow: true,\n            modalText: text,\n        });\n    }\n\n    changeName(e) {\n        this.createCaseGroupRequest.name = e.currentTarget.value;\n    }\n\n    changeDesc(e) {\n        this.createCaseGroupRequest.description = e.currentTarget.value;\n    }\n\n    createCaseGroup() {\n        if (this.createCaseGroupRequest.name === '' || this.createCaseGroupRequest.description === '') {\n            this.showModal('信息填写不完整');\n        } else {\n            this.setState({\n                btnCreate: {\n                    disabled: true,\n                    text: '创建中...'\n                }\n            });\n            this.props.createCaseGroup(this.createCaseGroupRequest);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.createCaseGroupResult !== this.props.createCaseGroupResult) {\n            this.setState({\n                btnCreate: {\n                    disabled: false,\n                    text: '创建用例组'\n                }\n            });\n            if (!nextProps.createCaseGroupResult.status) {\n                this.showModal(nextProps.createCaseGroupResult.message);\n            } else {\n                this.props.history.push('/case/' + nextProps.createCaseGroupResult.data.id);\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.props.setBreadCrumbMenu([\n            {\n                title: 'CaseGroup',\n                clickable: true,\n                route: '/case-groups'\n            },\n            {\n                title: 'Create',\n                clickable: false,\n                route: ''\n            }\n        ]);\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    createCaseGroupResult: state.reduxResult.createCaseGroupResult,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    createCaseGroup,\n    setBreadCrumbMenu\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CaseGroupCreate);\n","/Users/xingfeng.yang/project/scpweb/src/actions/TasksAction.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":138,"column":5,"nodeType":"164","messageId":"165","endLine":140,"endColumn":6},{"ruleId":"158","replacedBy":"166"},{"ruleId":"160","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":30,"column":44,"nodeType":"170","messageId":"171","endLine":30,"endColumn":46},{"ruleId":"162","severity":1,"message":"163","line":9,"column":5,"nodeType":"164","messageId":"165","endLine":11,"endColumn":6},{"ruleId":"162","severity":1,"message":"163","line":7,"column":5,"nodeType":"164","messageId":"165","endLine":9,"endColumn":6},{"ruleId":"162","severity":1,"message":"163","line":6,"column":5,"nodeType":"164","messageId":"165","endLine":8,"endColumn":6},{"ruleId":"168","severity":1,"message":"169","line":119,"column":49,"nodeType":"170","messageId":"171","endLine":119,"endColumn":51},{"ruleId":"168","severity":1,"message":"169","line":120,"column":46,"nodeType":"170","messageId":"171","endLine":120,"endColumn":48},{"ruleId":"172","severity":1,"message":"173","line":6,"column":25,"nodeType":"174","messageId":"175","endLine":6,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":15,"column":5,"nodeType":"164","messageId":"165","endLine":17,"endColumn":6},{"ruleId":"162","severity":1,"message":"163","line":14,"column":5,"nodeType":"164","messageId":"165","endLine":16,"endColumn":6},{"ruleId":"172","severity":1,"message":"176","line":8,"column":9,"nodeType":"174","messageId":"175","endLine":8,"endColumn":15},{"ruleId":"172","severity":1,"message":"177","line":8,"column":17,"nodeType":"174","messageId":"175","endLine":8,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":15,"column":5,"nodeType":"164","messageId":"165","endLine":17,"endColumn":6},{"ruleId":"172","severity":1,"message":"178","line":6,"column":33,"nodeType":"174","messageId":"175","endLine":6,"endColumn":40},{"ruleId":"172","severity":1,"message":"179","line":9,"column":9,"nodeType":"174","messageId":"175","endLine":9,"endColumn":22},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["180"],["181"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'faCube' is defined but never used.","Identifier","unusedVar","'getApp' is defined but never used.","'getProject' is defined but never used.","'faCubes' is defined but never used.","'createProject' is defined but never used.","no-global-assign","no-unsafe-negation"]